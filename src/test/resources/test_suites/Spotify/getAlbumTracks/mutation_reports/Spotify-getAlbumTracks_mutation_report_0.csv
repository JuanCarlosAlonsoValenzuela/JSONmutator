testCaseId;killed;killedBy_invariant;description;killedBy_pptname;killedBy_invariantType
test_ubj2rtqufvw5_getAlbumTracks;true;LENGTH(return.id)==22;Expected length of 22 for variable return.id, got 0 instead.;main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.string.FixedLengthString
test_r1iv3i1zdmb8_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element ejemplo minus is 13;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1if0jldn2wrht_getAlbumTracks;true;return.track_number >= 1;The value of return.track_number should be greater or equal than 1 but got -805120;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.scalar.LowerBound
test_rhrph9s8emhx_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element d is 1;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_tol7wj7p8fn6_getAlbumTracks;true;return.total >= size(return.items[]);The value of size(return.items[..]) should be lesser or equal than return.total (2), but got 3;main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;daikon.inv.binary.twoScalar.IntGreaterEqual
test_ts1x1vl02fxx_getAlbumTracks;false;;;;
test_1hbjaqnra3rjn_getAlbumTracks;true;LENGTH(return.href)==57;Expected length of 57 for variable return.href, got 3 instead.;main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.string.FixedLengthString
test_t8a4x5dhzz21_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element T83ZmId5st is 10;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_qy1pbtydq92d_getAlbumTracks;true;return.href is Url;The value UD for the variable return.href is not a valid URL;main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.string.IsUrl
test_rhahsallz0hi_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element /,CD is 4;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_soen3yikil2s_getAlbumTracks;true;LENGTH(return.uri)==37;Expected length of 37 for variable return.uri, got 36 instead.;main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.string.FixedLengthString
test_1iavfbnmkvdbs_getAlbumTracks;true;return.disc_number >= 1;The value of return.disc_number should be greater or equal than 1 but got 0;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.scalar.LowerBound
test_1hrs1lpabimgi_getAlbumTracks;true;LENGTH(return.id)==22;Expected length of 22 for variable return.id, got 6 instead.;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.string.FixedLengthString
test_u88gqlfstr37_getAlbumTracks;false;;;;
test_t84kwxffbmep_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element P*H is 3;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1iyqjerpsr9ko_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element U is 1;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_ubguxzlsouw2_getAlbumTracks;false;;;;
test_qhq54nt5s5ki_getAlbumTracks;true;LENGTH(return.uri)==37;Expected length of 37 for variable return.uri, got 38 instead.;main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.string.FixedLengthString
test_r17bmag3uu01_getAlbumTracks;false;;;;
test_qhhrdxhdxqp2_getAlbumTracks;false;;;;
test_rkzld5uu1202_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element Alwr5 is 5;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_soknt0lm16qr_getAlbumTracks;false;;;;
test_vbhf1xmtq2wl_getAlbumTracks;true;return.href is Url;The value EJEMPLO MAYUS for the variable return.href is not a valid URL;main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.string.IsUrl
test_s101mgwf2hiw_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element EJEMPLO MAYUS is 13;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1ib5xdj1uim3n_getAlbumTracks;true;return.track_number >= 1;The value of return.track_number should be greater or equal than 1 but got -246755;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.scalar.LowerBound
test_skkiafy1iqm0_getAlbumTracks;false;;;;
test_tocvhh2y7bjs_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element O%G is 3;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1h84s06wbnazl_getAlbumTracks;false;;;;
test_1k1ziifywyxis_getAlbumTracks;true;input.limit == return.limit;input.limit should be equal to return.limit, but got different values (9 and -428530);main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;daikon.inv.binary.twoScalar.IntEqual
test_uvjoxhfq1kqh_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element MvJ0tr34QG is 10;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_sl9fvj4x2q0h_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element S is 1;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_rhaijx0x2btt_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element I_:Wd is 5;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1k1rp6ulh56pe_getAlbumTracks;true;return.type == "artist";Expected one of [artist], got artit;main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.string.OneOfString
test_1iv3tn1mlinue_getAlbumTracks;false;;;;
test_qdy9226jp8aa_getAlbumTracks;false;;;;
test_t4a1cge2cvnc_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element ;]\w, is 5;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1iyi99pccaat4_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element N is 1;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1iv6lsyiw3f52_getAlbumTracks;true;return.id is a substring of return.href;Expected value of return.id (2ph9PeWJYYemlA3gRy6Dxb) to be a substring of return.href (https://api.spotify.com/v1/tracks/2ph9PeWJYYemmA3gRy6Dxb);main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.binary.twoString.StdString$SubString
test_1ies6s6u4fu42_getAlbumTracks;false;;;;
test_rh8anu1rmfcg_getAlbumTracks;false;;;;
test_1iuyahklvck86_getAlbumTracks;false;;;;
test_ts4o1vgkmzxg_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element EJEMPLO MAYUS is 13;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_ure0bon714rn_getAlbumTracks;false;;;;
test_s4xckn57a1wx_getAlbumTracks;true;input.offset == return.offset;input.offset should be equal to return.offset, but got different values (20 and 21);main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;daikon.inv.binary.twoScalar.IntEqual
test_1jygjl7xuj886_getAlbumTracks;false;;;;
test_1ib99f8fe97j5_getAlbumTracks;true;return.type == "track";Expected one of [track], got EJEMPLO MAYUS;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.string.OneOfString
test_qxw4jo4x3z1w_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element ´/XK is 4;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1iv9dl5sxckm9_getAlbumTracks;false;;;;
test_t4vnqsz0q25f_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element ,MY is 3;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1jecq4sydrewo_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element 4XK is 3;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString