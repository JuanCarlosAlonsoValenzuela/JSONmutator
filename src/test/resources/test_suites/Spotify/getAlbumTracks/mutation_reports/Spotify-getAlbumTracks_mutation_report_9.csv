testCaseId;killed;killedBy_invariant;description;killedBy_pptname;killedBy_invariantType
test_ubj2rtqufvw5_getAlbumTracks;true;return.is_local == false;Expected one of [0], got 1;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.scalar.OneOfScalar
test_r1iv3i1zdmb8_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element N is 1;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1if0jldn2wrht_getAlbumTracks;false;;;;
test_rhrph9s8emhx_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element  is 0;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_tol7wj7p8fn6_getAlbumTracks;false;;;;
test_ts1x1vl02fxx_getAlbumTracks;true;input.offset == return.offset;input.offset should be equal to return.offset, but got different values (8 and 9);main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;daikon.inv.binary.twoScalar.IntEqual
test_1hbjaqnra3rjn_getAlbumTracks;true;LENGTH(return.linked_from.id)==22;Expected length of 22 for variable return.linked_from.id, got 5 instead.;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.string.FixedLengthString
test_t8a4x5dhzz21_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element ejemplo minus is 13;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_qy1pbtydq92d_getAlbumTracks;false;;;;
test_rhahsallz0hi_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element P is 1;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_soen3yikil2s_getAlbumTracks;true;return.type == "artist";Expected one of [artist], got fV1Q9icc2l;main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.string.OneOfString
test_1iavfbnmkvdbs_getAlbumTracks;false;;;;
test_1hrs1lpabimgi_getAlbumTracks;true;LENGTH(return.uri)==37;Expected length of 37 for variable return.uri, got 38 instead.;main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.string.FixedLengthString
test_u88gqlfstr37_getAlbumTracks;false;;;;
test_t84kwxffbmep_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element K is 1;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1iyqjerpsr9ko_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element ´CM is 3;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_ubguxzlsouw2_getAlbumTracks;false;;;;
test_qhq54nt5s5ki_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element 9fDIBkoTKZ is 10;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_r17bmag3uu01_getAlbumTracks;false;;;;
test_qhhrdxhdxqp2_getAlbumTracks;false;;;;
test_rkzld5uu1202_getAlbumTracks;false;;;;
test_soknt0lm16qr_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element /*BD is 4;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_vbhf1xmtq2wl_getAlbumTracks;false;;;;
test_s101mgwf2hiw_getAlbumTracks;false;;;;
test_1ib5xdj1uim3n_getAlbumTracks;false;;;;
test_skkiafy1iqm0_getAlbumTracks;false;;;;
test_tocvhh2y7bjs_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element S is 1;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1h84s06wbnazl_getAlbumTracks;false;;;;
test_1k1ziifywyxis_getAlbumTracks;false;;;;
test_uvjoxhfq1kqh_getAlbumTracks;false;;;;
test_sl9fvj4x2q0h_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element ejemplo minus is 13;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_rhaijx0x2btt_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element ´,KR is 4;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1k1rp6ulh56pe_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element ´,SV is 4;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1iv3tn1mlinue_getAlbumTracks;true;input.offset == return.offset;input.offset should be equal to return.offset, but got different values (13 and 425184);main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;daikon.inv.binary.twoScalar.IntEqual
test_qdy9226jp8aa_getAlbumTracks;true;LENGTH(return.uri)==36;Expected length of 36 for variable return.uri, got 6 instead.;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.string.FixedLengthString
test_t4a1cge2cvnc_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element B/E is 3;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1iyi99pccaat4_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element EJEMPLO MAYUS is 13;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1iv6lsyiw3f52_getAlbumTracks;true;return.linked_from.type == return.type;Expected value of return.type to be }X](ks"l|, but got track instead;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.binary.twoString.StringEqual
test_1ies6s6u4fu42_getAlbumTracks;true;LENGTH(return.uri)==37;Expected length of 37 for variable return.uri, got 36 instead.;main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.string.FixedLengthString
test_rh8anu1rmfcg_getAlbumTracks;true;LENGTH(return.id)==22;Expected length of 22 for variable return.id, got 21 instead.;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.string.FixedLengthString
test_1iuyahklvck86_getAlbumTracks;false;;;;
test_ts4o1vgkmzxg_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element GjQ is 3;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_ure0bon714rn_getAlbumTracks;true;input.offset == return.offset;input.offset should be equal to return.offset, but got different values (4 and 5);main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;daikon.inv.binary.twoScalar.IntEqual
test_s4xckn57a1wx_getAlbumTracks;true;input.limit == return.limit;input.limit should be equal to return.limit, but got different values (45 and 44);main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;daikon.inv.binary.twoScalar.IntEqual
test_1jygjl7xuj886_getAlbumTracks;false;;;;
test_1ib99f8fe97j5_getAlbumTracks;false;;;;
test_qxw4jo4x3z1w_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element *KI is 3;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1iv9dl5sxckm9_getAlbumTracks;true;LENGTH(return.id)==22;Expected length of 22 for variable return.id, got 24 instead.;main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.string.FixedLengthString
test_t4vnqsz0q25f_getAlbumTracks;true;All the elements of return.available_markets[] have LENGTH=2;The length of all the elements of return.available_markets[..] should be 2, but the length of the element LMT is 3;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.stringsequence.SequenceFixedLengthString
test_1jecq4sydrewo_getAlbumTracks;true;size(return.artists[]) >= 1;The value of size(return.artists[..]) should be greater or equal than 1 but got 0;main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;daikon.inv.unary.scalar.LowerBound